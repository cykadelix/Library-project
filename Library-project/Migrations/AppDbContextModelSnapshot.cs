// <auto-generated />
using System;
using System.Collections.Generic;
using Library_project.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Library_project.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Library_project.Data.Objects.Location", b =>
                {
                    b.Property<int>("r")
                        .HasColumnType("integer");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("Library_project.Models.activities", b =>
                {
                    b.Property<int>("activity_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("activity_id"));

                    b.Property<string>("activity_type")
                        .HasColumnType("text");

                    b.Property<DateOnly>("date")
                        .HasColumnType("date");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<TimeOnly>("length")
                        .HasColumnType("time without time zone");

                    b.Property<int>("room_number")
                        .HasColumnType("integer");

                    b.HasKey("activity_id");

                    b.HasIndex("room_number");

                    b.ToTable("activities");
                });

            modelBuilder.Entity("Library_project.Models.audiobooks", b =>
                {
                    b.Property<int>("audiobookid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("audiobookid"));

                    b.Property<string>("author")
                        .HasColumnType("text");

                    b.Property<bool>("availability")
                        .HasColumnType("boolean");

                    b.Property<int>("genre")
                        .HasColumnType("integer");

                    b.Property<TimeOnly>("length")
                        .HasColumnType("time without time zone");

                    b.Property<int>("mediaid")
                        .HasColumnType("integer");

                    b.Property<string>("narrator")
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.HasKey("audiobookid");

                    b.HasIndex("mediaid");

                    b.ToTable("audiobooks");
                });

            modelBuilder.Entity("Library_project.Models.books", b =>
                {
                    b.Property<int>("bookid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("bookid"));

                    b.Property<string>("author")
                        .HasColumnType("text");

                    b.Property<bool>("availability")
                        .HasColumnType("boolean");

                    b.Property<int>("genres")
                        .HasColumnType("integer");

                    b.Property<long>("isbn")
                        .HasColumnType("bigint");

                    b.Property<int>("mediaid")
                        .HasColumnType("integer");

                    b.Property<int>("pagecount")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("publicdate")
                        .HasColumnType("date");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.HasKey("bookid");

                    b.HasIndex("mediaid");

                    b.ToTable("books");
                });

            modelBuilder.Entity("Library_project.Models.cameras", b =>
                {
                    b.Property<int>("cameraid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("cameraid"));

                    b.Property<bool>("availability")
                        .HasColumnType("boolean");

                    b.Property<string>("brand")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<int>("mediaid")
                        .HasColumnType("integer");

                    b.Property<double>("megapixels")
                        .HasColumnType("double precision");

                    b.Property<string>("serialnumber")
                        .HasColumnType("text");

                    b.HasKey("cameraid");

                    b.HasIndex("mediaid");

                    b.ToTable("cameras");
                });

            modelBuilder.Entity("Library_project.Models.checkouts", b =>
                {
                    b.Property<int>("checkoutid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("checkoutid"));

                    b.Property<DateTime>("checkoutdate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("mediaid")
                        .HasColumnType("integer");

                    b.Property<DateTime>("returndate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("studentid")
                        .HasColumnType("integer");

                    b.HasKey("checkoutid");

                    b.HasIndex("mediaid");

                    b.HasIndex("studentid");

                    b.ToTable("checkouts");
                });

            modelBuilder.Entity("Library_project.Models.computers", b =>
                {
                    b.Property<int>("computerid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("computerid"));

                    b.Property<bool>("availability")
                        .HasColumnType("boolean");

                    b.Property<string>("brand")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<int>("mediaid")
                        .HasColumnType("integer");

                    b.Property<string>("serialnumber")
                        .HasColumnType("text");

                    b.HasKey("computerid");

                    b.HasIndex("mediaid");

                    b.ToTable("computers");
                });

            modelBuilder.Entity("Library_project.Models.employees", b =>
                {
                    b.Property<int>("employeeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("employeeid"));

                    b.Property<DateOnly>("birthday")
                        .HasColumnType("date");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("fname")
                        .HasColumnType("text");

                    b.Property<string>("homeaddress")
                        .HasColumnType("text");

                    b.Property<string>("lname")
                        .HasColumnType("text");

                    b.Property<string>("mname")
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.Property<string>("phonenumber")
                        .HasColumnType("text");

                    b.Property<string>("position")
                        .HasColumnType("text");

                    b.Property<float>("salary")
                        .HasColumnType("real");

                    b.HasKey("employeeid");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("Library_project.Models.historians", b =>
                {
                    b.Property<int>("historianid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("historianid"));

                    b.Property<DateOnly>("birthday")
                        .HasColumnType("date");

                    b.Property<string>("education")
                        .HasColumnType("text");

                    b.Property<string>("expertise")
                        .HasColumnType("text");

                    b.Property<string>("fname")
                        .HasColumnType("text");

                    b.Property<int>("library_card_number")
                        .HasColumnType("integer");

                    b.Property<string>("lname")
                        .HasColumnType("text");

                    b.Property<string>("mname")
                        .HasColumnType("text");

                    b.Property<int?>("studentlibrary_card_number")
                        .HasColumnType("integer");

                    b.HasKey("historianid");

                    b.HasIndex("studentlibrary_card_number");

                    b.ToTable("historians");
                });

            modelBuilder.Entity("Library_project.Models.journals", b =>
                {
                    b.Property<int>("journalid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("journalid"));

                    b.Property<bool>("availability")
                        .HasColumnType("boolean");

                    b.Property<int>("length")
                        .HasColumnType("integer");

                    b.Property<int>("mediaid")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("releasedate")
                        .HasColumnType("date");

                    b.Property<string>("researchers")
                        .HasColumnType("text");

                    b.Property<string>("subject")
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.HasKey("journalid");

                    b.HasIndex("mediaid");

                    b.ToTable("journals");
                });

            modelBuilder.Entity("Library_project.Models.medias", b =>
                {
                    b.Property<int>("mediaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("mediaid"));

                    b.HasKey("mediaid");

                    b.ToTable("medias");
                });

            modelBuilder.Entity("Library_project.Models.movies", b =>
                {
                    b.Property<int>("movieid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("movieid"));

                    b.Property<bool>("availability")
                        .HasColumnType("boolean");

                    b.Property<string>("director")
                        .HasColumnType("text");

                    b.Property<int>("genres")
                        .HasColumnType("integer");

                    b.Property<int>("length")
                        .HasColumnType("integer");

                    b.Property<int>("mediaid")
                        .HasColumnType("integer");

                    b.Property<int?>("rating")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("releasedate")
                        .HasColumnType("date");

                    b.Property<string>("title")
                        .HasColumnType("text");

                    b.HasKey("movieid");

                    b.HasIndex("mediaid");

                    b.ToTable("movies");
                });

            modelBuilder.Entity("Library_project.Models.projectors", b =>
                {
                    b.Property<int>("projectorid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("projectorid"));

                    b.Property<bool>("availability")
                        .HasColumnType("boolean");

                    b.Property<string>("brand")
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .HasColumnType("text");

                    b.Property<int>("lumens")
                        .HasColumnType("integer");

                    b.Property<int>("mediaid")
                        .HasColumnType("integer");

                    b.Property<string>("serialnumber")
                        .HasColumnType("text");

                    b.HasKey("projectorid");

                    b.HasIndex("mediaid");

                    b.ToTable("projectors");
                });

            modelBuilder.Entity("Library_project.Models.reviews", b =>
                {
                    b.Property<int>("reviewid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("reviewid"));

                    b.Property<string>("evaluation")
                        .HasColumnType("text");

                    b.Property<int>("mediaid")
                        .HasColumnType("integer");

                    b.Property<short>("rating")
                        .HasColumnType("smallint");

                    b.Property<int>("studentid")
                        .HasColumnType("integer");

                    b.HasKey("reviewid");

                    b.HasIndex("mediaid");

                    b.HasIndex("studentid");

                    b.ToTable("reviews");
                });

            modelBuilder.Entity("Library_project.Models.rooms", b =>
                {
                    b.Property<int>("room_number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("room_number"));

                    b.Property<List<DateTime>>("availabilty")
                        .HasColumnType("timestamp with time zone[]");

                    b.Property<int>("capacity")
                        .HasColumnType("integer");

                    b.Property<string>("features")
                        .HasColumnType("text");

                    b.Property<bool>("reserved")
                        .HasColumnType("boolean");

                    b.HasKey("room_number");

                    b.ToTable("rooms");
                });

            modelBuilder.Entity("Library_project.Models.students", b =>
                {
                    b.Property<int>("library_card_number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("library_card_number"));

                    b.Property<DateOnly>("birthday")
                        .HasColumnType("date");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("fname")
                        .HasColumnType("text");

                    b.Property<int?>("historianshistorianid")
                        .HasColumnType("integer");

                    b.Property<string>("homeaddress")
                        .HasColumnType("text");

                    b.Property<string>("lname")
                        .HasColumnType("text");

                    b.Property<string>("mname")
                        .HasColumnType("text");

                    b.Property<float>("overdue_fees")
                        .HasColumnType("real");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.Property<string>("phonenumber")
                        .HasColumnType("text");

                    b.HasKey("library_card_number");

                    b.HasIndex("historianshistorianid");

                    b.ToTable("students");
                });

            modelBuilder.Entity("Library_project.Models.user", b =>
                {
                    b.Property<int?>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int?>("id"));

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.Property<string>("role")
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("user");
                });

            modelBuilder.Entity("Library_project.Models.userdto", b =>
                {
                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.Property<string>("role")
                        .HasColumnType("text");

                    b.ToTable("userdtos");
                });

            modelBuilder.Entity("Library_project.Models.activities", b =>
                {
                    b.HasOne("Library_project.Models.rooms", "room")
                        .WithMany("activites")
                        .HasForeignKey("room_number")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("room");
                });

            modelBuilder.Entity("Library_project.Models.audiobooks", b =>
                {
                    b.HasOne("Library_project.Models.medias", "media")
                        .WithMany()
                        .HasForeignKey("mediaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("media");
                });

            modelBuilder.Entity("Library_project.Models.books", b =>
                {
                    b.HasOne("Library_project.Models.medias", "media")
                        .WithMany()
                        .HasForeignKey("mediaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("media");
                });

            modelBuilder.Entity("Library_project.Models.cameras", b =>
                {
                    b.HasOne("Library_project.Models.medias", "media")
                        .WithMany()
                        .HasForeignKey("mediaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("media");
                });

            modelBuilder.Entity("Library_project.Models.checkouts", b =>
                {
                    b.HasOne("Library_project.Models.medias", "media")
                        .WithMany()
                        .HasForeignKey("mediaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library_project.Models.students", "student")
                        .WithMany()
                        .HasForeignKey("studentid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("media");

                    b.Navigation("student");
                });

            modelBuilder.Entity("Library_project.Models.computers", b =>
                {
                    b.HasOne("Library_project.Models.medias", "media")
                        .WithMany()
                        .HasForeignKey("mediaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("media");
                });

            modelBuilder.Entity("Library_project.Models.historians", b =>
                {
                    b.HasOne("Library_project.Models.students", "student")
                        .WithMany()
                        .HasForeignKey("studentlibrary_card_number");

                    b.Navigation("student");
                });

            modelBuilder.Entity("Library_project.Models.journals", b =>
                {
                    b.HasOne("Library_project.Models.medias", "media")
                        .WithMany()
                        .HasForeignKey("mediaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("media");
                });

            modelBuilder.Entity("Library_project.Models.movies", b =>
                {
                    b.HasOne("Library_project.Models.medias", "media")
                        .WithMany()
                        .HasForeignKey("mediaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("media");
                });

            modelBuilder.Entity("Library_project.Models.projectors", b =>
                {
                    b.HasOne("Library_project.Models.medias", "media")
                        .WithMany()
                        .HasForeignKey("mediaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("media");
                });

            modelBuilder.Entity("Library_project.Models.reviews", b =>
                {
                    b.HasOne("Library_project.Models.medias", "media")
                        .WithMany()
                        .HasForeignKey("mediaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library_project.Models.students", "student")
                        .WithMany()
                        .HasForeignKey("studentid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("media");

                    b.Navigation("student");
                });

            modelBuilder.Entity("Library_project.Models.students", b =>
                {
                    b.HasOne("Library_project.Models.historians", null)
                        .WithMany("studentstosee")
                        .HasForeignKey("historianshistorianid");
                });

            modelBuilder.Entity("Library_project.Models.historians", b =>
                {
                    b.Navigation("studentstosee");
                });

            modelBuilder.Entity("Library_project.Models.rooms", b =>
                {
                    b.Navigation("activites");
                });
#pragma warning restore 612, 618
        }
    }
}
