// <auto-generated />
using System;
using Library_project.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Library_project.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230406032718_test1")]
    partial class test1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Library_project.Data.Objects.Location", b =>
                {
                    b.Property<int>("r")
                        .HasColumnType("integer");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("Library_project.Models.audiobook", b =>
                {
                    b.Property<int>("audiobookid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("audiobookid"));

                    b.Property<string>("author")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("availability")
                        .HasColumnType("boolean");

                    b.Property<int>("genre")
                        .HasColumnType("integer");

                    b.Property<TimeOnly>("length")
                        .HasColumnType("time without time zone");

                    b.Property<int>("mediaid")
                        .HasColumnType("integer");

                    b.Property<string>("narrator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("audiobookid");

                    b.HasIndex("mediaid");

                    b.ToTable("audiobook");
                });

            modelBuilder.Entity("Library_project.Models.book", b =>
                {
                    b.Property<int>("bookid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("bookid"));

                    b.Property<string[]>("author")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<int>("genres")
                        .HasColumnType("integer");

                    b.Property<bool>("isavailable")
                        .HasColumnType("boolean");

                    b.Property<long>("isbn")
                        .HasColumnType("bigint");

                    b.Property<int>("mediaid")
                        .HasColumnType("integer");

                    b.Property<int>("pagecount")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("publicdate")
                        .HasColumnType("date");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("bookid");

                    b.HasIndex("mediaid");

                    b.ToTable("books");
                });

            modelBuilder.Entity("Library_project.Models.computer", b =>
                {
                    b.Property<int>("serialnumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("serialnumber"));

                    b.Property<bool>("availibility")
                        .HasColumnType("boolean");

                    b.Property<string>("brand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("mediaid")
                        .HasColumnType("integer");

                    b.HasKey("serialnumber");

                    b.HasIndex("mediaid");

                    b.ToTable("computers");
                });

            modelBuilder.Entity("Library_project.Models.employee", b =>
                {
                    b.Property<int>("employeeid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("employeeid"));

                    b.Property<short>("age")
                        .HasColumnType("smallint");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("employee")
                        .HasColumnType("integer");

                    b.Property<string>("fname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("homeaddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("lname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("mname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("phonenumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<float>("salary")
                        .HasColumnType("real");

                    b.Property<int>("supervisorid")
                        .HasColumnType("integer");

                    b.HasKey("employeeid");

                    b.HasIndex("employee");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("Library_project.Models.historian", b =>
                {
                    b.Property<int>("historianid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("historianid"));

                    b.Property<short>("age")
                        .HasColumnType("smallint");

                    b.Property<string>("education")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("expertise")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("fname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("lname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("mname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("historianid");

                    b.ToTable("historians");
                });

            modelBuilder.Entity("Library_project.Models.journal", b =>
                {
                    b.Property<int>("jouranalid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("jouranalid"));

                    b.Property<bool>("isavailable")
                        .HasColumnType("boolean");

                    b.Property<int>("length")
                        .HasColumnType("integer");

                    b.Property<int>("mediaid")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("releasedate")
                        .HasColumnType("date");

                    b.Property<string[]>("researchers")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string[]>("subject")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("jouranalid");

                    b.HasIndex("mediaid");

                    b.ToTable("journals");
                });

            modelBuilder.Entity("Library_project.Models.media", b =>
                {
                    b.Property<int>("mediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("mediaId"));

                    b.HasKey("mediaId");

                    b.ToTable("media");
                });

            modelBuilder.Entity("Library_project.Models.movie", b =>
                {
                    b.Property<int>("movieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("movieId"));

                    b.Property<bool>("availability")
                        .HasColumnType("boolean");

                    b.Property<string>("director")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("genres")
                        .HasColumnType("integer");

                    b.Property<int>("length")
                        .HasColumnType("integer");

                    b.Property<int>("mediaid")
                        .HasColumnType("integer");

                    b.Property<int>("rating")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("releasedate")
                        .HasColumnType("date");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("movieId");

                    b.HasIndex("mediaid");

                    b.ToTable("movies");
                });

            modelBuilder.Entity("Library_project.Models.projector", b =>
                {
                    b.Property<int>("serialnumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("serialnumber"));

                    b.Property<bool>("availibility")
                        .HasColumnType("boolean");

                    b.Property<string>("brand")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("lumens")
                        .HasColumnType("integer");

                    b.Property<int>("mediaid")
                        .HasColumnType("integer");

                    b.HasKey("serialnumber");

                    b.HasIndex("mediaid");

                    b.ToTable("projectors");
                });

            modelBuilder.Entity("Library_project.Models.review", b =>
                {
                    b.Property<int>("reviewid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("reviewid"));

                    b.Property<string>("evaluation")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("mediaid")
                        .HasColumnType("integer");

                    b.Property<short>("rating")
                        .HasColumnType("smallint");

                    b.Property<int>("studentid")
                        .HasColumnType("integer");

                    b.HasKey("reviewid");

                    b.HasIndex("mediaid");

                    b.HasIndex("studentid");

                    b.ToTable("reviews");
                });

            modelBuilder.Entity("Library_project.Models.student", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int?>("historianid")
                        .HasColumnType("integer");

                    b.HasKey("id");

                    b.HasIndex("historianid");

                    b.ToTable("students");
                });

            modelBuilder.Entity("Library_project.Models.audiobook", b =>
                {
                    b.HasOne("Library_project.Models.media", "media")
                        .WithMany()
                        .HasForeignKey("mediaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("media");
                });

            modelBuilder.Entity("Library_project.Models.book", b =>
                {
                    b.HasOne("Library_project.Models.media", "media")
                        .WithMany()
                        .HasForeignKey("mediaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("media");
                });

            modelBuilder.Entity("Library_project.Models.computer", b =>
                {
                    b.HasOne("Library_project.Models.media", "media")
                        .WithMany()
                        .HasForeignKey("mediaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("media");
                });

            modelBuilder.Entity("Library_project.Models.employee", b =>
                {
                    b.HasOne("Library_project.Models.employee", "supervisor")
                        .WithMany()
                        .HasForeignKey("employee")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("supervisor");
                });

            modelBuilder.Entity("Library_project.Models.journal", b =>
                {
                    b.HasOne("Library_project.Models.media", "media")
                        .WithMany()
                        .HasForeignKey("mediaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("media");
                });

            modelBuilder.Entity("Library_project.Models.movie", b =>
                {
                    b.HasOne("Library_project.Models.media", "media")
                        .WithMany()
                        .HasForeignKey("mediaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("media");
                });

            modelBuilder.Entity("Library_project.Models.projector", b =>
                {
                    b.HasOne("Library_project.Models.media", "media")
                        .WithMany()
                        .HasForeignKey("mediaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("media");
                });

            modelBuilder.Entity("Library_project.Models.review", b =>
                {
                    b.HasOne("Library_project.Models.media", "media")
                        .WithMany()
                        .HasForeignKey("mediaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Library_project.Models.student", "student")
                        .WithMany()
                        .HasForeignKey("studentid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("media");

                    b.Navigation("student");
                });

            modelBuilder.Entity("Library_project.Models.student", b =>
                {
                    b.HasOne("Library_project.Models.historian", null)
                        .WithMany("studentstosee")
                        .HasForeignKey("historianid");
                });

            modelBuilder.Entity("Library_project.Models.historian", b =>
                {
                    b.Navigation("studentstosee");
                });
#pragma warning restore 612, 618
        }
    }
}
